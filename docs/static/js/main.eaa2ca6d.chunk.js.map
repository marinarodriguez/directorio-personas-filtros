{"version":3,"sources":["components/filters/index.js","components/card/index.js","components/list/index.js","services/people-service.js","components/app/index.js","index.js"],"names":["Filters","props","react_default","a","createElement","type","value","name","id","checked","genders","includes","onChange","onGenderChange","htmlFor","allCities","map","item","Fragment","key","onCityChange","cities","Card","img","city","age","src","alt","first","List","people","index","card","concat","last","picture","thumbnail","location","dob","fetchPeople","fetch","then","response","json","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","isFetching","filters","getPeople","bind","assertThisInitialized","handlerGenderFilter","handlerCityFilter","event","_event$target","target","console","log","setState","prevState","objectSpread","filter","_event$target2","_this2","results","ind","arr","indexOf","_this$state$people","_this$state$filters","className","list","person","length","gender","React","Component","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.eaa2ca6d.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Filters = props => {\n  return (\n    <form>\n      <fieldset>\n        <legend> Gender </legend>\n        <input\n          type=\"checkbox\"\n          value=\"male\"\n          name=\"male\"\n          id=\"male\"\n          checked={props.genders.includes(\"male\")}\n          onChange={props.onGenderChange}\n        />\n        <label htmlFor=\"male\">Male</label>\n        <input\n          type=\"checkbox\"\n          value=\"female\"\n          name=\"female\"\n          id=\"female\"\n          checked={props.genders.includes(\"female\")}\n          onChange={props.onGenderChange}\n        />\n        <label htmlFor=\"female\">Female</label>\n      </fieldset>\n      <fieldset>\n        <legend>Cities</legend>\n        {props.allCities.map(item => {\n          return (\n            <React.Fragment key={item}>\n              <input\n                type=\"checkbox\"\n                value={item}\n                name=\"cities\"\n                id={item}\n                onChange={props.onCityChange}\n                checked={props.cities.includes(item)}\n              />\n              <label htmlFor={item}>{item}</label>\n            </React.Fragment>\n          );\n        })}\n      </fieldset>\n    </form>\n  );\n};\n\nFilters.propTypes = {\n  onGenderChange: PropTypes.func.isRequired,\n  genders: PropTypes.array.isRequired,\n  allCities: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default Filters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Card(props){\n    const {name, img, city, age} = props;\n    return ( <article>\n        <h2>{name}</h2>\n        <img src={img} alt={name.first} />\n        <p>{city}</p>\n        <p>{age}</p>\n    </article> )\n}\n \nexport default Card;\n\nCard.propTypes = {\n    name: PropTypes.string.isRequired,\n    img: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    age: PropTypes.number.isRequired\n}","import React from \"react\";\nimport Card from \"../card\";\nimport PropTypes from \"prop-types\";\n\nconst List = props => {\n  return (\n    <ul>\n      {props.people.map((item, index) => {\n        return (\n          <li key={index}>\n            <Card\n              name={`${item.name.first} ${item.name.last}`}\n              img={item.picture.thumbnail}\n              city={item.location.city}\n              age={item.dob.age}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default List;\n\nList.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n","const URL = 'https://randomuser.me/api/?results=50';\n\nconst fetchPeople = () =>{\n    return fetch(URL).then(response => response.json())\n}\n\nexport default fetchPeople;\n// Function:\n\n// function fetchPeople(){\n//     fetch(URL)\n//     .then(response => response.json())\n// }","import React from \"react\";\nimport \"./styles.scss\";\nimport Filters from \"../filters\";\nimport List from \"../list\";\nimport fetchPeople from \"../../services/people-service\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      people: {\n        data: [],\n        isFetching: true\n      },\n      filters: {\n        genders: [],\n        cities: [],\n        allCities: []\n      }\n    };\n    this.getPeople = this.getPeople.bind(this);\n    this.handlerGenderFilter = this.handlerGenderFilter.bind(this);\n    this.handlerCityFilter = this.handlerCityFilter.bind(this);\n  }\n\n  handlerGenderFilter(event) {\n    const { value, checked } = event.target;\n    console.log(value);\n    this.setState(prevState => {\n      return {\n        filters: {\n          ...prevState.filters,\n          genders: checked\n            ? prevState.filters.genders.concat(value)\n            : prevState.filters.genders.filter(item => item !== value)\n        }\n      };\n    });\n  }\n  handlerCityFilter(event) {\n    const { value, checked } = event.target;\n    console.log(value);\n    this.setState(prevState => {\n      return {\n        filters: {\n          ...prevState.filters,\n          cities: checked\n            ? prevState.filters.cities.concat(value)\n            : prevState.filters.genders.filter(item => item !== value)\n        }\n      };\n    });\n  }\n  getPeople() {\n    fetchPeople().then(data => {\n      this.setState(prevState => {\n        return {\n          people: {\n            data: data.results,\n            isFetching: false\n          },\n          filters: {\n            ...prevState.filters,\n            allCities: data.results\n              .map(item => item.location.city)\n              .filter((item, ind, arr) => arr.indexOf(item) === ind)\n          }\n        };\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getPeople();\n  }\n  render() {\n    const { isFetching, data } = this.state.people;\n    const { genders, cities } = this.state.filters;\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>People Directory</h1>\n        </header>\n        {isFetching ? (\n          <p>Loading...</p>\n        ) : (\n          <React.Fragment>\n            <Filters\n              onGenderChange={this.handlerGenderFilter}\n              genders={this.state.filters.genders}\n              allCities={this.state.filters.allCities}\n              onCityChange={this.handlerCityFilter}\n              cities={this.state.filters.cities}\n            />\n            <List people={data.\n              filter(person => {\n                if(!genders.length){\n                  return true;\n                }\n                else {\n                  return genders.includes(person.gender)\n                }\n              }).filter(person => {\n                if(!cities.length){\n                  return true;\n                }\n                else {\n                  return cities.includes(person.location.city)\n                }\n              })} />\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/app';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}